{"ast":null,"code":"var _jsxFileName = \"/Users/josh/Documents/VS Code/Projects/chat-app/client/src/pages/Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { contactRoute, createMessageRoute, getMessageRoute } from '../utils/apiRoutes';\nimport Contacts from '../components/Contacts/Contacts';\nimport MessageInput from '../components/Messages/MessageInput';\nimport MessageDisplay from '../components/Messages/MessageDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Chat() {\n  _s();\n\n  const [contacts, setContacts] = useState();\n  const [user, setUser] = useState();\n  const [selected, setSelected] = useState();\n  const [messages, setMessages] = useState();\n  const navigate = useNavigate();\n  useEffect(() => {\n    console.log(JSON.parse(localStorage.getItem('user')));\n\n    if (!localStorage.getItem('user')) {\n      navigate('/login');\n    } else {\n      const userInfo = JSON.parse(localStorage.getItem('user'));\n      console.log(userInfo);\n      setUser(userInfo);\n    }\n  }, [navigate]);\n  useEffect(() => {\n    if (user) {\n      axios.get(`${contactRoute}/${user._id}`).then(data => {\n        setContacts(data.data);\n      });\n    }\n  }, [user]);\n\n  const handleSelectedChange = selected => {\n    setSelected(selected);\n    const {\n      data\n    } = axios.post(getMessageRoute, {\n      recipient: user._id\n    });\n    let selectedMessages = data.filter((item, index) => {\n      return item.sender === selected._id;\n    });\n    setMessages(selectedMessages);\n  };\n\n  const logout = () => {\n    localStorage.removeItem('user');\n    navigate('/login');\n  };\n\n  const handleMessageSend = async message => {\n    try {\n      const {\n        data\n      } = await axios.post(createMessageRoute, {\n        body: message,\n        sender: user._id,\n        recipient: selected._id\n      });\n      console.log(data.msg);\n    } catch (ex) {\n      console.log(ex);\n    }\n  }; // const getMessage = async () => {\n  // \tconst { data } = await axios.post(getMessageRoute, {\n  // \t\trecipient: user._id\n  // \t})\n  // \tlet selectedMessages = data.filter((item, index) => {\n  // \t\treturn item.sender === selected._id\n  // \t})\n  // \tsetMessages(selectedMessages)\n  // \tconsole.log(selectedMessages)\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Contacts, {\n        contacts: contacts,\n        user: user,\n        changeSelected: handleSelectedChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MessageDisplay, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n        user: user,\n        selected: selected,\n        sendMessage: handleMessageSend\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Chat, \"6OllQchBiby4RGCAC6smfBfdUKQ=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","contactRoute","createMessageRoute","getMessageRoute","Contacts","MessageInput","MessageDisplay","Chat","contacts","setContacts","user","setUser","selected","setSelected","messages","setMessages","navigate","console","log","JSON","parse","localStorage","getItem","userInfo","get","_id","then","data","handleSelectedChange","post","recipient","selectedMessages","filter","item","index","sender","logout","removeItem","handleMessageSend","message","body","msg","ex"],"sources":["/Users/josh/Documents/VS Code/Projects/chat-app/client/src/pages/Chat.jsx"],"sourcesContent":["import React, { useState , useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { contactRoute, createMessageRoute, getMessageRoute } from '../utils/apiRoutes';\nimport Contacts from '../components/Contacts/Contacts';\nimport MessageInput from '../components/Messages/MessageInput';\nimport MessageDisplay from '../components/Messages/MessageDisplay';\n\nfunction Chat() {\n\n    const [contacts, setContacts] = useState();\n    const [user, setUser] = useState();\n    const [selected, setSelected] = useState();\n\tconst [messages, setMessages] = useState()\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n\t\tconsole.log(JSON.parse(localStorage.getItem('user')))\n    \tif(!localStorage.getItem('user')) {\n        navigate('/login');\n\t\t}\n\t\telse {\n\t\t\tconst userInfo = JSON.parse(localStorage.getItem('user'));\n\t\t\tconsole.log(userInfo)\n\t\t\tsetUser(userInfo);\n\t\t}\n    }, [navigate]);\n\n    useEffect(() => {\n      if(user) {\n        axios.get(`${contactRoute}/${user._id}`)\n          .then((data) => {\n            setContacts(data.data);\n          })\n      }\n    }, [user])\n\n    const handleSelectedChange = (selected) => {\n\t\tsetSelected(selected)\n\t\tconst { data } = axios.post(getMessageRoute, {\n\t\t\trecipient: user._id\n\t\t\t})\n\t\tlet selectedMessages = data.filter((item, index) => {\n\t\t\treturn item.sender === selected._id\n\t\t})\n\t\tsetMessages(selectedMessages)\n    };\n\n    const logout = () => {\n      localStorage.removeItem('user');\n\t  navigate('/login')\n    };\n\n    const handleMessageSend = async (message) => {\n\n\t\ttry{\n\t\t\tconst { data } = await axios.post(createMessageRoute, {\n\t\t\t\tbody: message,\n\t\t\t\tsender: user._id,\n\t\t\t\trecipient: selected._id\n\t\t\t})\n\t\t\tconsole.log(data.msg)\n\t\t}catch(ex){\n\t\t\tconsole.log(ex)\n\t\t}\n    }\n\n\t// const getMessage = async () => {\n\t// \tconst { data } = await axios.post(getMessageRoute, {\n\t// \t\trecipient: user._id\n\t// \t})\n\t// \tlet selectedMessages = data.filter((item, index) => {\n\t// \t\treturn item.sender === selected._id\n\t// \t})\n\t// \tsetMessages(selectedMessages)\n\t// \tconsole.log(selectedMessages)\n\t// }\n\n    return (\n\t\t<>\n\t\t\t<button onClick={logout}>Logout</button>\n\t\t\t<div className='container'>\n\t\t\t\t<Contacts contacts={contacts} user={user} changeSelected={handleSelectedChange}/>\n\t\t\t\t<MessageDisplay messages={messages} />\n\t\t\t\t<MessageInput user={user} selected={selected} sendMessage={handleMessageSend}/>\n\t\t\t</div>\n\t\t</>\n\t)\n       \n}\n\nexport default Chat"],"mappings":"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"},"metadata":{},"sourceType":"module"}